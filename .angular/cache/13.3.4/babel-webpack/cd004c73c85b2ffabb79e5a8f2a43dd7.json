{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/route.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/select\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/core\";\n\nfunction RouteListComponent_mat_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const route_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", route_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", route_r1.name, \" \");\n  }\n}\n\nexport let RouteListComponent = /*#__PURE__*/(() => {\n  class RouteListComponent {\n    constructor(_routeService, _activatedRoute) {\n      this._routeService = _routeService;\n      this._activatedRoute = _activatedRoute;\n    }\n\n    getRoutes() {\n      if (this._activatedRoute.snapshot.paramMap) {\n        this._routeService.getRoutes(this._activatedRoute.snapshot.paramMap.get('routes')).subscribe(value => {\n          this._routes = value;\n        }, error => {\n          console.log(error);\n          console.log(error.status);\n          console.log(error.error);\n        });\n      }\n    } // getWays(): void {\n    //   if (this._activatedRoute.snapshot.paramMap) {\n    //     this._routeService.getWays(this._activatedRoute.snapshot.paramMap.get('stops')).subscribe(value => {\n    //       this._ways1 = value;\n    //       this._ways1.forEach(stop => {\n    //            //console.log(stop.name)\n    //       })\n    //     },\n    //       error => {\n    //         console.log(error);\n    //         console.log(error.status);\n    //         console.log(error.error);\n    //       });\n    //   }\n    // }\n    // getStops(): void {\n    //   if (this._route.snapshot.paramMap) {\n    //     this._stopService.getStops(this._route.snapshot.paramMap.get('stops')).subscribe(value => {\n    //       this._stops = value;\n    //       this._stops.forEach(stop => {\n    //            this.addStop(stop.longitude/3600000.0, stop.latitude/3600000.0, stop.id, stop.name, stop.shortName);\n    //       })\n    //     },\n    //       error => {\n    //         console.log(error);\n    //         console.log(error.status);\n    //         console.log(error.error);\n    //       });\n    //   }\n    // }\n\n\n    getStops() {\n      if (this._activatedRoute.snapshot.paramMap) {\n        this._routeService.getStops(this._activatedRoute.snapshot.paramMap.get('stops')).subscribe(value => {\n          this._paths = value;\n\n          this._paths.forEach(stop => {\n            console.log(stop.name); //this.addStop(stop.longitude/3600000.0, stop.latitude/3600000.0, stop.id, stop.name, stop.shortName);\n          });\n        }, error => {\n          console.log(error);\n          console.log(error.status);\n          console.log(error.error);\n        });\n      }\n    }\n\n    getId() {\n      //this.getRoute(this.selectedItem);\n      this.getStops();\n    }\n\n    get routes() {\n      return this._routes;\n    }\n\n    ngOnInit() {\n      this.getRoutes(); //this.getRoute(\"8095257447305838593\");\n    }\n\n    getRoute(id) {\n      this._routeService.getRoute(id).subscribe(data => {\n        this._route = data;\n        console.log(this._route.stops);\n      }, error => {\n        console.log(error);\n        console.log(error.status);\n        console.log(error.error);\n      });\n    }\n\n  }\n\n  RouteListComponent.ɵfac = function RouteListComponent_Factory(t) {\n    return new (t || RouteListComponent)(i0.ɵɵdirectiveInject(i1.RouteService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  RouteListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RouteListComponent,\n    selectors: [[\"app-route-list\"]],\n    decls: 10,\n    vars: 3,\n    consts: [[3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function RouteListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n        i0.ɵɵtext(2, \"Route List\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"mat-form-field\")(4, \"mat-select\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function RouteListComponent_Template_mat_select_ngModelChange_4_listener($event) {\n          return ctx.selectedItem = $event;\n        })(\"ngModelChange\", function RouteListComponent_Template_mat_select_ngModelChange_4_listener() {\n          return ctx.getId();\n        });\n        i0.ɵɵelementStart(5, \"mat-label\");\n        i0.ɵɵtext(6, \"Your Team\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, RouteListComponent_mat_option_7_Template, 2, 2, \"mat-option\", 1);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"h3\");\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedItem);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.routes);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Your Team is: \", ctx.selectedItem, \"\");\n      }\n    },\n    directives: [i3.MatFormField, i4.MatSelect, i5.NgControlStatus, i5.NgModel, i3.MatLabel, i6.NgForOf, i7.MatOption],\n    styles: [\"\"]\n  });\n  return RouteListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}