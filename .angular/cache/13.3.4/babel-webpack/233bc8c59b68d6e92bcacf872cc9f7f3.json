{"ast":null,"code":"import Feature from 'ol/Feature';\nimport { Point } from 'ol/geom';\nimport { Fill, Style, Circle } from 'ol/style';\nimport { timer } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/vehicle.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/map/service/map.service\";\nexport let VehicleListComponent = /*#__PURE__*/(() => {\n  class VehicleListComponent {\n    constructor(_vehicleService, _route, _mapService) {\n      this._vehicleService = _vehicleService;\n      this._route = _route;\n      this._mapService = _mapService;\n    }\n\n    addVehicle(latitude, longitude, id, name) {\n      var style = new Style({\n        image: new Circle({\n          radius: 5,\n          fill: new Fill({\n            color: 'blue'\n          })\n        })\n      });\n      const vehicle = new Point([latitude, longitude]);\n      vehicle.transform('EPSG:4326', 'EPSG:3857');\n      var feature = new Feature(vehicle);\n      feature.setStyle(style);\n      const vehicleDegree = new Point(vehicle.getCoordinates());\n      vehicleDegree.transform('EPSG:3857', 'EPSG:4326');\n      feature.setProperties({\n        'thing': 'vehicle',\n        'id': id,\n        'name': name,\n        'longitude': vehicleDegree.getCoordinates()[0],\n        'latitude': vehicleDegree.getCoordinates()[1]\n      });\n\n      this._mapService.vehiclesVectorSource.addFeature(feature);\n    }\n\n    getVehicles() {\n      if (this._route.snapshot.paramMap) {\n        this._vehicleService.getVehicles(this._route.snapshot.paramMap.get('vehicles')).subscribe(value => {\n          this._vehicles = value;\n\n          this._mapService.vehiclesVectorSource.clear();\n\n          this._vehicles.forEach(vehicle => {\n            this.addVehicle(vehicle.longitude / 3600000.0, vehicle.latitude / 3600000.0, vehicle.id, vehicle.name);\n          });\n        }, error => {\n          console.log(error);\n          console.log(error.status);\n          console.log(error.error);\n        });\n      }\n    }\n\n    get vehicles() {\n      return this._vehicles;\n    }\n\n    ngOnInit() {\n      let sub = timer(0, 1000).subscribe(timer => {\n        this.getVehicles();\n      });\n    }\n\n  }\n\n  VehicleListComponent.ɵfac = function VehicleListComponent_Factory(t) {\n    return new (t || VehicleListComponent)(i0.ɵɵdirectiveInject(i1.VehicleService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.MapService));\n  };\n\n  VehicleListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: VehicleListComponent,\n    selectors: [[\"app-vehicle-list\"]],\n    decls: 0,\n    vars: 0,\n    template: function VehicleListComponent_Template(rf, ctx) {},\n    styles: [\"\"]\n  });\n  return VehicleListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}