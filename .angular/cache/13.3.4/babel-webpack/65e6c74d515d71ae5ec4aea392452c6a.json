{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Route } from '../model/route';\nimport { Way } from '../model/way';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let RouteService = /*#__PURE__*/(() => {\n  class RouteService {\n    constructor(_http) {\n      this._http = _http;\n    }\n\n    getRoutes(name) {\n      let headers = new HttpHeaders();\n      headers = headers.set('Data-Type', 'json');\n      return this._http.get('/internetservice/services/routeInfo/route', {\n        headers\n      }).pipe(map(value => {\n        let routes = new Array();\n        value.routes.forEach(route => {\n          routes.push(new Route(route.id, route.name, route.stops));\n        });\n        return routes;\n      }));\n    }\n\n    getWays(name) {\n      let headers = new HttpHeaders();\n      headers = headers.set('Data-Type', 'json'); //return this._http.get<GetWayResponse>('/internetservice/geoserviceDispatcher/services/pathinfo/route?id=8095257447305838596', { headers }).\n\n      return this._http.get('/internetservice/geoserviceDispatcher/services/stopinfo/stops?left=-648000000&bottom=-324000000&right=648000000&top=324000000', {\n        headers\n      }).pipe(map(value => {\n        let ways = new Array();\n        value.ways.forEach(way => {\n          console.log(way.name);\n          ways.push(new Way(way.name));\n        });\n        return ways;\n      }));\n    }\n\n    getRoute(id) {\n      let headers = new HttpHeaders();\n      headers = headers.set('Data-Type', 'json');\n      return this._http.get('/internetservice/services/routeInfo/routeStops?routeId=' + id, {\n        headers\n      });\n    }\n\n    getWay(id) {\n      let headers = new HttpHeaders();\n      headers = headers.set('Data-Type', 'json');\n      return this._http.get('/internetservice/geoserviceDispatcher/services/pathinfo/route?id=' + id, {\n        headers\n      }); // http://91.223.13.70/internetservice/geoserviceDispatcher/services/pathinfo/route?id=8095257447305838596\n    }\n\n  }\n\n  RouteService.ɵfac = function RouteService_Factory(t) {\n    return new (t || RouteService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  RouteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RouteService,\n    factory: RouteService.ɵfac,\n    providedIn: 'root'\n  });\n  return RouteService;\n})();","map":null,"metadata":{},"sourceType":"module"}